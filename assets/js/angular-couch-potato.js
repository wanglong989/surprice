!function(){var CouchPotato=function(angular){function CouchPotatoProvider($controllerProvider,$compileProvider,$provide,$filterProvider){function registerValue(value,apply){$provide.value.apply(null,value),apply&&rootScope.$apply()}function registerFactory(factory,apply){$provide.factory.apply(null,factory),apply&&rootScope.$apply()}function registerService(service,apply){$provide.service.apply(null,service),apply&&rootScope.$apply()}function registerFilter(filter,apply){$filterProvider.register.apply(null,filter),apply&&rootScope.$apply()}function registerDirective(directive,apply){$compileProvider.directive.apply(null,directive),apply&&rootScope.$apply()}function registerController(controller,apply){$controllerProvider.register.apply(null,controller),apply&&rootScope.$apply()}function registerDecorator(decorator,apply){$provide.decorator.apply(null,decorator),apply&&rootScope.$apply()}function registerProvider(service,apply){$provide.provider.apply(null,service),apply&&rootScope.$apply()}function resolve(dependencies,returnIndex,returnSubId){return dependencies.dependencies?resolveDependenciesProperty(dependencies,returnIndex,returnSubId):resolveDependencies(dependencies,returnIndex,returnSubId)}function resolveDependencies(dependencies,returnIndex,returnSubId){function delay($q,$rootScope){var defer=$q.defer();return require(dependencies,function(){{var out;Array.prototype.slice(arguments)}void 0===returnIndex?out=arguments[arguments.length-1]:(argForOut=arguments[returnIndex],out=void 0===returnSubId?argForOut:argForOut[returnSubId]),defer.resolve(out),$rootScope.$apply()}),defer.promise}return delay.$inject=["$q","$rootScope"],delay}function resolveDependenciesProperty(configProperties){if(configProperties.dependencies){var resolveConfig=configProperties,deps=configProperties.dependencies;return delete resolveConfig.dependencies,resolveConfig.resolve={},resolveConfig.resolve.delay=resolveDependencies(deps),resolveConfig}return configProperties}var rootScope=null;this.resolve=resolve,this.resolveDependencies=resolveDependencies,this.resolveDependenciesProperty=resolveDependenciesProperty,this.$get=function($rootScope){var svc={};return rootScope=$rootScope,svc.registerValue=registerValue,svc.registerFactory=registerFactory,svc.registerService=registerService,svc.registerFilter=registerFilter,svc.registerDirective=registerDirective,svc.registerController=registerController,svc.registerDecorator=registerDecorator,svc.registerProvider=registerProvider,svc.resolveDependenciesProperty=resolveDependenciesProperty,svc.resolveDependencies=resolveDependencies,svc.resolve=resolve,svc},this.$get.$inject=["$rootScope"]}var module=angular.module("scs.couch-potato",["ng"]);CouchPotatoProvider.$inject=["$controllerProvider","$compileProvider","$provide","$filterProvider"],module.provider("$couchPotato",CouchPotatoProvider),this.configureApp=function(app){app.registerController=function(name,controller){return app.lazy?app.lazy.registerController([name,controller]):app.controller(name,controller),app},app.registerFactory=function(name,factory){return app.lazy?app.lazy.registerFactory([name,factory]):app.factory(name,factory),app},app.registerService=function(name,service){return app.lazy?app.lazy.registerService([name,service]):app.service(name,service),app},app.registerDirective=function(name,directive){return app.lazy?app.lazy.registerDirective([name,directive]):app.directive(name,directive),app},app.registerDecorator=function(name,decorator){return app.lazy?app.lazy.registerDecorator([name,decorator]):app.decorator(name,decorator),app},app.registerProvider=function(name,provider){return app.lazy?app.lazy.registerProvider([name,provider]):app.provider(name,provider),app},app.registerValue=function(name,value){return app.lazy?app.lazy.registerValue([name,value]):app.value(name,value),app},app.registerFilter=function(name,filter){return app.lazy?app.lazy.registerFilter([name,filter]):app.filter(name,filter),app},app.extendInjectable=function(parent,child){function disassembleInjected(object){if(angular.isArray(object)){var func=object.slice(object.length-1)[0];return[func,object.slice(0,object.length-1)]}var injections=object.$inject;return[object,injections||[]]}function CombinedConstructor(){var args=Array.prototype.slice.call(arguments);parentPieces[0].apply(this,args.slice(0,parentPieces[1].length)),childPieces[0].apply(this,args.slice(parentPieces[1].length))}function Inherit(){}return parentPieces=disassembleInjected(parent),childPieces=disassembleInjected(child),Inherit.prototype=parentPieces[0].prototype,CombinedConstructor.prototype=new Inherit,CombinedConstructor.$inject=[].concat(parentPieces[1]).concat(childPieces[1]),CombinedConstructor}}};"function"==typeof define&&define.amd?define(["angular"],function(){return new CouchPotato(window.angular)}):window.couchPotato=new CouchPotato(angular)}();